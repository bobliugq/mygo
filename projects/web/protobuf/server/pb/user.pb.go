// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UserInfoReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Age                  int32    `protobuf:"varint,2,opt,name=Age" json:"Age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfoReq) Reset()         { *m = UserInfoReq{} }
func (m *UserInfoReq) String() string { return proto.CompactTextString(m) }
func (*UserInfoReq) ProtoMessage()    {}
func (*UserInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_d0188f9f5cf98326, []int{0}
}
func (m *UserInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfoReq.Unmarshal(m, b)
}
func (m *UserInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfoReq.Marshal(b, m, deterministic)
}
func (dst *UserInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfoReq.Merge(dst, src)
}
func (m *UserInfoReq) XXX_Size() int {
	return xxx_messageInfo_UserInfoReq.Size(m)
}
func (m *UserInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfoReq proto.InternalMessageInfo

func (m *UserInfoReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserInfoReq) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

type UserInfoReply struct {
	Code                 int32    `protobuf:"varint,1,opt,name=Code" json:"Code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfoReply) Reset()         { *m = UserInfoReply{} }
func (m *UserInfoReply) String() string { return proto.CompactTextString(m) }
func (*UserInfoReply) ProtoMessage()    {}
func (*UserInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_d0188f9f5cf98326, []int{1}
}
func (m *UserInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfoReply.Unmarshal(m, b)
}
func (m *UserInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfoReply.Marshal(b, m, deterministic)
}
func (dst *UserInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfoReply.Merge(dst, src)
}
func (m *UserInfoReply) XXX_Size() int {
	return xxx_messageInfo_UserInfoReply.Size(m)
}
func (m *UserInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfoReply proto.InternalMessageInfo

func (m *UserInfoReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UserInfoReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*UserInfoReq)(nil), "user.UserInfoReq")
	proto.RegisterType((*UserInfoReply)(nil), "user.UserInfoReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	GetUserInfo(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoReply, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) GetUserInfo(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoReply, error) {
	out := new(UserInfoReply)
	err := c.cc.Invoke(ctx, "/user.User/GetUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	GetUserInfo(context.Context, *UserInfoReq) (*UserInfoReply, error)
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetUserInfo(ctx, req.(*UserInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserInfo",
			Handler:    _User_GetUserInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_user_d0188f9f5cf98326) }

var fileDescriptor_user_d0188f9f5cf98326 = []byte{
	// 165 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x2d, 0x4e, 0x2d,
	0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0x8c, 0xb9, 0xb8, 0x43, 0x8b,
	0x53, 0x8b, 0x3c, 0xf3, 0xd2, 0xf2, 0x83, 0x52, 0x0b, 0x85, 0x84, 0xb8, 0x58, 0xfc, 0x12, 0x73,
	0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x21, 0x01, 0x2e, 0x66, 0xc7, 0xf4,
	0x54, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xd6, 0x20, 0x10, 0x53, 0xc9, 0x96, 0x8b, 0x17, 0xa1, 0xa9,
	0x20, 0xa7, 0x12, 0xa4, 0xcd, 0x39, 0x3f, 0x05, 0xa2, 0x8d, 0x35, 0x08, 0xcc, 0x16, 0x92, 0xe0,
	0x62, 0xf7, 0x4d, 0x2d, 0x2e, 0x4e, 0x84, 0x6a, 0xe5, 0x0c, 0x82, 0x71, 0x8d, 0xec, 0xb9, 0x58,
	0x40, 0xda, 0x85, 0xcc, 0xb9, 0xb8, 0xdd, 0x53, 0x4b, 0x60, 0x26, 0x09, 0x09, 0xea, 0x81, 0x5d,
	0x87, 0xe4, 0x1c, 0x29, 0x61, 0x74, 0xa1, 0x82, 0x9c, 0x4a, 0x25, 0x06, 0x27, 0x96, 0x28, 0xa6,
	0x82, 0xa4, 0x24, 0x36, 0xb0, 0x3f, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x1a, 0x97, 0x88,
	0x6e, 0xd5, 0x00, 0x00, 0x00,
}
