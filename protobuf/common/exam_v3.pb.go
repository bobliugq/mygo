// Code generated by protoc-gen-go. DO NOT EDIT.
// source: exam_v3.proto

package myexam

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Ua int32

const (
	Ua_UNKNOWN Ua = 0
	Ua_WEB     Ua = 10
	Ua_H5      Ua = 20
	Ua_IOS     Ua = 30
	Ua_ANDROID Ua = 40
	Ua_WX      Ua = 50
)

var Ua_name = map[int32]string{
	0:  "UNKNOWN",
	10: "WEB",
	20: "H5",
	30: "IOS",
	40: "ANDROID",
	50: "WX",
}
var Ua_value = map[string]int32{
	"UNKNOWN": 0,
	"WEB":     10,
	"H5":      20,
	"IOS":     30,
	"ANDROID": 40,
	"WX":      50,
}

func (x Ua) String() string {
	return proto.EnumName(Ua_name, int32(x))
}
func (Ua) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_exam_v3_7d3a22442aed07f3, []int{0}
}

// protoc3 --go_out=. exam_v3.proto
// proto3支持 map 只能放在message中,作为结构体的一个属性存在
// required和optional都不要了，默认就是optional），删除默认值（不明白）。
// 谷歌生成这些改变视为了更好的兼容Android Java、Objective C和Go语言
type Myfoo struct {
	Bar                  map[string]string `protobuf:"bytes,1,rep,name=bar" json:"bar,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Info                 []string          `protobuf:"bytes,2,rep,name=info" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Myfoo) Reset()         { *m = Myfoo{} }
func (m *Myfoo) String() string { return proto.CompactTextString(m) }
func (*Myfoo) ProtoMessage()    {}
func (*Myfoo) Descriptor() ([]byte, []int) {
	return fileDescriptor_exam_v3_7d3a22442aed07f3, []int{0}
}
func (m *Myfoo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Myfoo.Unmarshal(m, b)
}
func (m *Myfoo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Myfoo.Marshal(b, m, deterministic)
}
func (dst *Myfoo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Myfoo.Merge(dst, src)
}
func (m *Myfoo) XXX_Size() int {
	return xxx_messageInfo_Myfoo.Size(m)
}
func (m *Myfoo) XXX_DiscardUnknown() {
	xxx_messageInfo_Myfoo.DiscardUnknown(m)
}

var xxx_messageInfo_Myfoo proto.InternalMessageInfo

func (m *Myfoo) GetBar() map[string]string {
	if m != nil {
		return m.Bar
	}
	return nil
}

func (m *Myfoo) GetInfo() []string {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*Myfoo)(nil), "myexam.Myfoo")
	proto.RegisterMapType((map[string]string)(nil), "myexam.Myfoo.BarEntry")
	proto.RegisterEnum("myexam.Ua", Ua_name, Ua_value)
}

func init() { proto.RegisterFile("exam_v3.proto", fileDescriptor_exam_v3_7d3a22442aed07f3) }

var fileDescriptor_exam_v3_7d3a22442aed07f3 = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xad, 0x48, 0xcc,
	0x8d, 0x2f, 0x33, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xcb, 0xad, 0x04, 0x09, 0x28,
	0xd5, 0x72, 0xb1, 0xfa, 0x56, 0xa6, 0xe5, 0xe7, 0x0b, 0x69, 0x70, 0x31, 0x27, 0x25, 0x16, 0x49,
	0x30, 0x2a, 0x30, 0x6b, 0x70, 0x1b, 0x89, 0xe9, 0x41, 0xa4, 0xf5, 0xc0, 0x72, 0x7a, 0x4e, 0x89,
	0x45, 0xae, 0x79, 0x25, 0x45, 0x95, 0x41, 0x20, 0x25, 0x42, 0x42, 0x5c, 0x2c, 0x99, 0x79, 0x69,
	0xf9, 0x12, 0x4c, 0x0a, 0xcc, 0x1a, 0x9c, 0x41, 0x60, 0xb6, 0x94, 0x19, 0x17, 0x07, 0x4c, 0x91,
	0x90, 0x00, 0x17, 0x73, 0x76, 0x6a, 0xa5, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x88, 0x29,
	0x24, 0xc2, 0xc5, 0x5a, 0x96, 0x98, 0x53, 0x9a, 0x2a, 0xc1, 0x04, 0x16, 0x83, 0x70, 0xac, 0x98,
	0x2c, 0x18, 0xb5, 0x1c, 0xb8, 0x98, 0x42, 0x13, 0x85, 0xb8, 0xb9, 0xd8, 0x43, 0xfd, 0xbc, 0xfd,
	0xfc, 0xc3, 0xfd, 0x04, 0x18, 0x84, 0xd8, 0xb9, 0x98, 0xc3, 0x5d, 0x9d, 0x04, 0xb8, 0x84, 0xd8,
	0xb8, 0x98, 0x3c, 0x4c, 0x05, 0x44, 0x40, 0x02, 0x9e, 0xfe, 0xc1, 0x02, 0x72, 0x20, 0x65, 0x8e,
	0x7e, 0x2e, 0x41, 0xfe, 0x9e, 0x2e, 0x02, 0x1a, 0x20, 0xd9, 0xf0, 0x08, 0x01, 0xa3, 0x24, 0x36,
	0xb0, 0x7f, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x67, 0x98, 0x13, 0xbb, 0xe0, 0x00, 0x00,
	0x00,
}
