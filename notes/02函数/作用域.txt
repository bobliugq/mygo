在Go 中，定义在函数外的变量是全局的，那些定义在函数内部的变量，对于函数来说是局
部的。如果命名覆盖――一个局部变量与一个全局变量有相同的名字――在函数执行的时
候，局部变量将覆盖全局变量。


在函数内部调用变量，先就近查找，找不到就会到全局的地方去查找。

局部变量仅仅在执行定义它的函数时有效
func pg() {
	a := 123
	hg_p() //当我们试图在hg_p()函数中嗲用a变量，undefined: a
}
func hg_p() {
	fmt.Println(a)
}




