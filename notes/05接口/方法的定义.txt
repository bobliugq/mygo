方法
方法就是有接收者的函数（参阅第3 章）。
可以在任意类型上定义方法（除了非本地类型，包括内建类型：int 类型不能有方法）。然
而可以新建一个拥有方法的整数类型。例如：
type Foo int
func (self Foo) Emit() {
fmt.Printf("%v", self)
}
type Emitter interface {
Emit()
}


接口类型的方法
接口定义为一个方法的集合。方法包含实际的代码。换句话说，一个接口就是定义，而方法
就是实现。因此，接收者不能定义为接口类型，这样做的话会引起invalid receiver type
... 的编译器错误。来自语言说明书[14] 的权威内容：
接收者类型必须是T 或*T，这里的T 是类型名。T 叫做接收者基础类型或简称
基础类型。基础类型一定不能使指针或接口类型，并且定义在与方法相同的包
中。


